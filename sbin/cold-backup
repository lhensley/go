#!/bin/bash
# cold-backup

# Include script setup file
	source script-setup
	if [ ! $FUNCTIONS_ARE_DEFINED ]; then echo $0: Functions not defined. Aborting; logger $0: Functions not defined. Aborting; exit 1; fi
	if [ ! $VARIABLES_ARE_DEFINED ]; then echo $0: Variables not defined. Aborting; logger $0: Variables not defined. Aborting; exit 1; fi

# Require root
	f_require_root

# $COLD_BACKUP_FILE_SYSTEM can't be root
	if [ "$COLD_BACKUP_FILE_SYSTEM" == "/" ]; then
		f_die "Backup file system cannot be /." true
		fi

# Export cron jobs for $CRONTAB_BACKUP_USERS
for SELECTED_USER in $CRONTAB_BACKUP_USERS; do 
	crontab -l -u $SELECTED_USER > $(eval echo "~$SELECTED_USER")/.crontab-archive
	chmod 600 $(eval echo "~$SELECTED_USER")/.crontab-archive
	chown $SELECTED_USER $(eval echo "~$SELECTED_USER")/.crontab-archive
	done

# Make the cold backup file system writable
if [ ! $(f_mount_ro_fs_as_rw "$COLD_BACKUP_FILE_SYSTEM") ]; then
	f_die "$COLD_BACKUP_FILE_SYSTEM is not mounted." true
	fi

# Dropped several services covered here in Dec 2020 because all services were being killed and not returning.
# See COLD_PROTECTED_SERVICES in _vars
# Stop services as needed
#	systemctl stop $COLD_PROTECTED_SERVICES

# Store current directory and switch to root
CURRENT_DIRECTORY="$(pwd)"
cd /

# Make container directory
mkdir -p "$COLD_BACKUP_DIRECTORY"

# Do backup with rsync
	rsync -aloprtvER --delete $COLD_BACKUP_SOURCES "$COLD_BACKUP_DIRECTORY"
	# Back up MySQL
		systemctl stop mysql
		mkdir -p "$COLD_BACKUP_DIRECTORY/var/lib/mysql"
		rsync -aloprtvER --delete /var/lib/mysql/* "$COLD_BACKUP_DIRECTORY"
		systemctl start mysql
	# Back up Postfix
		systemctl stop postfix
		mkdir -p "$COLD_BACKUP_DIRECTORY/var/lib/postfix"
		rsync -aloprtvER --delete /var/lib/postfix/* "$COLD_BACKUP_DIRECTORY"
		systemctl start postfix

# Start services as needed
#	systemctl start $COLD_PROTECTED_SERVICES

# Commented this out December 2020 because the drive itself was removed, causing data to be written into the mount point (need to fix)
# Archive the cold backup
 	mkdir -p "$THIS_ARCHIVE_DIRECTORY"
 	nice tar $BACKUP_OPTIONS $COLD_BACKUP_DIRECTORY
	nice cp "$ARCHIVE_TAR_FULL_WEEKDAY" "$ARCHIVE_TAR_FULL_MONTH"

if [ $COLD_BACKUP_FS_READ_ONLY ]; then
	cd /
	f_mount_ro_fs_as_ro "$COLD_BACKUP_FILE_SYSTEM" $COLD_BACKUP_FS_READ_ONLY
	fi

# Restore working directory
cd "$CURRENT_DIRECTORY"
 
# Update log
	echo
	echo Backup completed $(/bin/date '+%Y-%m-%d-%H-%M-%S-%Z')
	echo Backup completed $(/bin/date '+%Y-%m-%d-%H-%M-%S-%Z') >> $COLD_BACKUP_LOG
	chown $ADMIN_USER $COLD_BACKUP_LOG

# Include script footer file
	f_debug_variable "script_footer" "${PATHNAME[script_footer]}"
	source "${PATHNAME[script_footer]}"

exit 0
