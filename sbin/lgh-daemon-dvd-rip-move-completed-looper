#!/bin/bash
# This script should be run as root from cron, executed at boot time.
# For now, this should ONLY run on oz, because server-specific values are defined.

# Include script setup file
	source script-setup
	if [ ! $FUNCTIONS_ARE_DEFINED ];         then echo $0: Functions not defined. Aborting; logger $0: Functions not defined. Aborting;         exit 1; fi
	if [ ! $VARIABLES_ARE_DEFINED ];         then echo $0: Variables not defined. Aborting; logger $0: Variables not defined. Aborting;         exit 1; fi

# CASE DEFINITION:
# Move ripped DVD files that still need manual processing from oz to nuc01
# URGENT NEED: Define variables in "# HandBrake" (and elsewhere?) so we can reference these by variable for ANY server.
# SOURCE_ROOT_DIR="oz.lane.hensley.org:/mnt/ext10tb01/plex"
# SOURCE_ROOT_DIR="oz.lanehensley.org:/home/lhensley/Videos/HandBrake-Completed"
SOURCE_ROOT_DIR="/home/lhensley/Videos/HandBrake-Completed"
TARGET_ROOT_DIR="nuc01.lanehensley.org:/mnt/cloteal/Plex/uploads"

# MOVE (not copy) files to new directory or server/directory
# Useful for MOVING (not copying) completed video files
# Does NOT remove extraneous files from target directories
# rsync options considered
#    -a = archive mode, equivalent to -rlptgoD
#    -g = preserve group ownership
#    -l = recreate symlinks on destination
#    -n = dry run
#    -o = preserve owner
#    -p = preserve permissions
#    -q = quiet
#    -r = recursive (includes subdirectories)
#    -t = preserve modification times
#    -v = verbose
#    -D = preserve device files and special files
#    -E = preserve executability
#    -R = use relative paths (see https://linux.die.net/man/1/rsync for more info)
#    --delete = delete extraneous files from dest dirs

# Do the looping work
# CRITICAL: Note string literals and variables set here. All should be moved to _vars
    SHOULD_BE_IN_VARS_SLEEP_TIME="6h"
	while true; do
        sudo -u $ADMIN_USER rsync --remove-source-files -aloprtv "$SOURCE_ROOT_DIR"/* "$TARGET_ROOT_DIR"/
		f_log_and_echo "Sleeping $SHOULD_BE_IN_VARS_SLEEP_TIME." false  # The TRUE part at the end means this sends pager notices.
																        # Drop this when stable, and consider bumping up the interval.
		sleep "$SHOULD_BE_IN_VARS_SLEEP_TIME"
        done

# Include script footer file
	f_debug_variable "script_footer" "${PATHNAME[script_footer]}"
	source "${PATHNAME[script_footer]}"

exit 0

