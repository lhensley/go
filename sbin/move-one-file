#!/bin/bash
# move-one-file
# Usage: move-one-file <input_file> <root_in_path> <root_out_path>
# No final / on either path. For system root, use ""

production_mode=true
debug_mode=false
# debug_mode=true
if $debug_mode ; then
  set -x
  fi

IN_FILE=$1
ROOT_IN_PATH=$2
ROOT_OUT_PATH=$3

ROOT_IN_PATH_LENGTH=${#ROOT_IN_PATH}

RELATIVE_FILE_LENGTH=$[IN_FILE_LENGTH-ROOT_IN_PATH_LENGTH-1]
RELATIVE_FILE=${IN_FILE: -$RELATIVE_FILE_LENGTH} # Remove ROOT_IN_PATH

OUT_FILE="$ROOT_OUT_PATH/$RELATIVE_FILE"
NEW_DIRECTORY=$(dirname "$OUT_FILE")

# So here are useful variables defined ...
# $IN_FILE
# $OUT_FILE
# $ROOT_IN_PATH
# $ROOT_OUT_PATH
# $RELATIVE_FILE

# Make sure only root can run our script
  if [[ $EUID -ne 0 ]]; then
  logger "$0: This script must be run as root."
  echo "This script must be run as root."
  exit 1
fi

# Make sure $IN_FILE exists
if [ ! -f "$IN_FILE" ]; then
  logger "$0 no source file $IN_FILE"
  echo "$(date) $0 no source file" | mail -r move-one-file lanecell
  sleep 1
  echo "$IN_FILE" | mail -r move-one-file lanecell
  exit 1
  fi

# Make sure $IN_FILE is not in use
if [ -n "$(lsof "$IN_FILE" 2>/dev/null)" ]; then
    logger "$0: File in use and cannot move $IN_FILE"
    echo "$(date) $0: File in use and cannot move" | mail -r move-one-file lanecell
    sleep 1
    echo "$IN_FILE" | mail -r move-one-file lanecell
    exit 1
  fi

# Make the directory for out file
if [ ! -d "$NEW_DIRECTORY" ]; then
  mkdir -p "$NEW_DIRECTORY" >> /dev/null 2>&1 # Create the directory for the out file
  exit_status=$?
  if [ $exit_status -ne 0 ]; then # If the transcoding failed ...
      logger "$0 FAILED to make $NEW_DIRECTORY"
      echo "$(date) $0 Failed to make new directory" | mail -r move-one-file lanecell
      sleep 1
      echo "$NEW_DIRECTORY" | mail -r move-one-file lanecell
      exit $exit_status
      fi
  fi

# Move $IN_FILE to $OUT_FILE
mv "$IN_FILE" "$OUT_FILE" >> /dev/null 2>&1
exit_status=$?
if [ $exit_status -ne 0 ]; then # If the transcoding failed ...
    logger "$0 FAILED to move $IN_FILE to $NEW_DIRECTORY"
    echo "$(date) $0 Failed to move file" | mail -r move-one-file lanecell
    sleep 1
    echo "Infile $IN_FILE" | mail -r move-one-file lanecell
    echo "Outfile $OUT_FILE" | mail -r move-one-file lanecell
    exit $exit_status
  else
    logger "$0 moved $IN_FILE to $NEW_DIRECTORY"
  fi

logger "$0: Exited without error."
exit 0
