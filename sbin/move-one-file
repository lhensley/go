#!/bin/bash
# move-one-file
# Usage: move-one-file <input_file> <root_in_path> <root_out_path>
# No final / on either path. For system root, use ""




# In addition to other updates, add logging




# Include script setup file
source $(dirname $0)/script-setup

IN_FILE=$1
ROOT_IN_PATH=$2
ROOT_OUT_PATH=$3

ROOT_IN_PATH_LENGTH=${#ROOT_IN_PATH}

RELATIVE_FILE_LENGTH=$[IN_FILE_LENGTH-ROOT_IN_PATH_LENGTH-1]
RELATIVE_FILE=${IN_FILE: -$RELATIVE_FILE_LENGTH} # Remove ROOT_IN_PATH

OUT_FILE="$ROOT_OUT_PATH/$RELATIVE_FILE"
NEW_DIRECTORY=$(dirname "$OUT_FILE")

# So here are useful variables defined ...
# $IN_FILE
# $OUT_FILE
# $ROOT_IN_PATH
# $ROOT_OUT_PATH
# $RELATIVE_FILE

f_file_not_in_use "$1"

# Make the directory for out file
if [ ! -d "$NEW_DIRECTORY" ]; then
  mkdir -p "$NEW_DIRECTORY" # Create the directory for the out file
  exit_status=$?
  if [ $exit_status -ne 0 ]; then # If the transcoding failed ...
      logger "$0: FAILED to make $NEW_DIRECTORY"
      echo "$(date) $0: Failed to make new directory" | mail -r move-one-file lanecell
      sleep 1
      echo "$NEW_DIRECTORY" | mail -r move-one-file lanecell
      exit $exit_status
    fi
fi

# Move $IN_FILE to $OUT_FILE
mv "$IN_FILE" "$OUT_FILE"
exit_status=$?
if [ $exit_status -ne 0 ]; then # If the transcoding failed ...
    logger "$0: FAILED to move $IN_FILE to $NEW_DIRECTORY"
    echo "$(date) $0: Failed to move file" | mail -r move-one-file lanecell
    sleep 1
    echo "Infile $IN_FILE" | mail -r move-one-file lanecell
    echo "Outfile $OUT_FILE" | mail -r move-one-file lanecell
    exit $exit_status
  else
    logger "$0: moved $(basename $IN_FILE)"
  fi

# Include script footer file
f_debug_variable "script.script-footer.pathname" "${LANE_CONFIG[script.script-footer.pathname]}"
source ${LANE_CONFIG[script.script-footer.pathname]}

exit 0
