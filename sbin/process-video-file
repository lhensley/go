#!/bin/bash
# Based on https://www.reddit.com/r/PleX/comments/6gcfok/comskip_ffmpeg_script/
# Dependencies
# 	From apt-get: comskip ffmpeg ccextractor
#	From Github: https://github.com/BrettSheleski/comchap

# Include script setup file
	source script-setup
	if [ ! $FUNCTIONS_ARE_DEFINED ]; then echo $0: Functions not defined. Aborting; logger $0: Functions not defined. Aborting; exit 1; fi
	if [ ! $VARIABLES_ARE_DEFINED ]; then echo $0: Variables not defined. Aborting; logger $0: Variables not defined. Aborting; exit 1; fi

# POSSIBLE OPTION: USE IF YOU WANT
# Require root
#	f_require_root

# PATH is unnecessary since it's already there, but it doesn't hurt anything.
ComChapPath="/usr/local/bin"
PATH="$PATH:$ComChapPath"
ComSkipINI="/etc/comskip/comskip-DEFAULT.ini"
PVFlockFile="/tmp/process-video-file.lock"
ComchaplockFile="/tmp/comchap.lock"
origFile="$1"
HandbrakePreset="/etc/HandBrake/Lane Highest Quality.json"
tmpHEVC="/tmp/tmpHEVC"
uuid=$(uuidgen)
#tmpFile="/tmp/$1.tmp"
#tmpEncode="/tmp/$1.mkv"
#tmpSrt="/tmp/$1.srt"
# dvrPostLog="/media/8eeb64f5-b001-47d0-a261-bbee8a83d11d/plexdvr/dvrProcessing.log"

# Check for input file
if (( $# < 1 )); then
    echo "No input file specified."
	exit -1
	fi

# Make sure comskip is installed
if $(f_is_installed "comskip"); then true ; else apt-get -y install comskip; fi

# Create lock file to prevent other post-processing from running simultaneously
echo && echo "Creating lock file '$PVFlockFile' for processing '$origFile'" # | tee -a $dvrPostLog
touch "$PVFlockFile"
 
# Mark and cut commercials
echo && echo "cut from '$origFile'" # | tee -a $dvrPostLog
comcut --lockfile='ComchaplockFile' --comskip-ini="$ComSkipINI" "$origFile"

echo && echo "Render the HEVC version"
HandBrakeCLI --preset-import-file "$HandbrakePreset" -i "$origFile" -o "$tmpHEVC"

echo && echo "Replace the $origFile"
DIR="$(dirname "${origFile}")"
filename=$(basename -- "$origFile")
extension="${filename##*.}"
filename="${filename%.*}"
rm -f "$origFile"
mv "$tmpHEVC" "$DIR/$filename - HEVC.mp4"

# Remove lock file
echo && echo "Done processing '$origFile' removing lock" # | tee -a $dvrPostLog
rm $PVFlockFile

# Include script footer file
	f_debug_variable "script_footer" "${PATHNAME[script_footer]}"
	source "${PATHNAME[script_footer]}"

exit 0

############################################################################################

exit -1

# Original script below:
# 
# 
# #!/bin/csh
# 
# set path = ($path /usr/local/bin)
# set lockFile = '/tmp/dvrProcessing.lock'
# set origFile = "$1"
# set tmpFile = "$1.tmp"
# set tmpEncode = "$1.mkv"
# set tmpSrt = "$1.srt"
# set dvrPostLog = '/media/8eeb64f5-b001-47d0-a261-bbee8a83d11d/plexdvr/dvrProcessing.log'
# 
# #Wait if post processing is already running
# while ( -f $lockFile )
#     echo "'$lockFile' exists, sleeping processing of '$origFile'" | tee $dvrPostLog
#     sleep 10
# end
# 
# #Create lock file to prevent other post-processing from running simultaneously
# echo "Creating lock file for processing '$origFile'" | tee -a $dvrPostLog
# touch $lockFile
# 
# #Mark and cut commercials
# echo "cut from '$origFile'" | tee -a $dvrPostLog
# /media/8eeb64f5-b001-47d0-a261-bbee8a83d11d/plexdvr/comchap/comcut --lockfile=/tmp/ComchaplockFile --comskip-ini=/media/8eeb64f5-b001-47d0-a261-bbee8a83d11d/plexdvr/comskip.ini "$origFile"
# 
# #Pull CC from file to SRT file
# echo "Pulling Closed captions from '$origFile' to SRT file" | tee -a $dvrPostLog
# ccextractor "$origFile" -o "$tmpSrt"
# 
# #Encode file to H.264 with mkv container using ffmpeg and mux in CC srt
# echo "Re-encoding '$origFile' to MKV file while adding cc data" | tee -a $dvrPostLog
# /usr/bin/ffmpeg -i "$origFile" -i "$tmpSrt" -map 0 -map 1 -acodec copy -scodec copy -c:v libx264 -preset medium -profile:v high -level 4.0 -deinterlace "$tmpEncode"
# 
# #Remove SRT file
# echo "Remove SRT file" | tee -a $dvrPostLog
# rm -f "$tmpSrt"
# 
# #Rename first transcoded file to temp file in case no subtitles
# echo "Rename transcoded file to tmp file" | tee -a $dvrPostLog
# mv -f "$tmpEncode" "$tmpFile"
# 
# #Overwrite original ts file with the transcoded file
# echo "Removing '$origFile'" | tee -a $dvrPostLog
# mv -f "$tmpFile" "$origFile"
# 
# #Remove lock file
# echo "Done processing '$origFile' removing lock" | tee -a $dvrPostLog
# rm $lockFile
# 
# exit 0
# 
# 