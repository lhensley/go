#!/bin/bash
# apply-configs

# Invoked by ${LANE_CONFIG[system.sbin-dir]}/_git and ${LANE_CONFIG[system.sbin-dir]}/setup/setup-os
# Changed apt-get to apt 1/31/19.
# See https://itsfoss.com/apt-vs-apt-difference/ for rationale.

# Include script setup file
source $(dirname $0)/script-setup

# Set ownership and permissions in /usr/local/sbin
chown -R root:root ${LANE_CONFIG[system.sbin-dir]}
# chmod 755 ${LANE_CONFIG[system.sbin-dir]} ${LANE_CONFIG[system.sbin-dir]}/setup ${LANE_CONFIG[system.sbin-dir]}/include
find ${LANE_CONFIG[system.sbin-dir]} -type d -print -exec chmod 755 {} \; >> /dev/null 2>&1
# chmod -R 755 ${LANE_CONFIG[system.sbin-dir]}/*
find ${LANE_CONFIG[system.sbin-dir]} -type f -print -exec chmod 755 {} \; >> /dev/null 2>&1

# Exceptions: These can be read or run by anyone
# These based on functional requirements
chmod 755 ${LANE_CONFIG[script.lhlib.pathname]}
chmod 755 ${LANE_CONFIG[script.rip.pathname]}
chmod 755 ${LANE_CONFIG[script.transcode.pathname]}
chmod 755 ${LANE_CONFIG[script.process-incoming-scans.pathname]}
# These based on desire. CAUTION: Don't expose anything that has a password or code in it.
chmod 740 ${LANE_CONFIG[script.upd.pathname]} 
chmod 740 ${LANE_CONFIG[script.script-setup.pathname]} 
chmod 740 ${LANE_CONFIG[script._apply-configs.pathname]}

# Git
chmod 600 /root/.gitconfig
cp /root/.gitconfig $HOME_DIR/.gitconfig
chown root:root /root/.gitconfig
chown $USER_ME:$USER_ME $HOME_DIR/.gitconfig
chmod -R 400 $GIT

# ddclient
if [ -f $GO_CONFIGS/ddclient/$HOST_NAME/ddclient.conf ]; then
	cp $GO_CONFIGS/ddclient/$HOST_NAME/ddclient.conf /etc/
	chmod 600 /etc/ddclient.conf
	chown root:root /etc/ddclient.conf
	cp $GO_CONFIGS/ddclient/etc-default-ddclient /etc/default/ddclient
	chmod 600 /etc/default/ddclient
	chown root:root /etc/default/ddclient
	fi

# fstab
if [ -f $GO_CONFIGS/fstab/$HOST_NAME/fstab ]; then
	cp $GO_CONFIGS/fstab/$HOST_NAME/fstab /etc/fstab.from.git
	chown root:root /etc/fstab.from.git
	chmod 600 /etc/fstab.from.git
	fi

# lane.conf
if [ -f $GO_CONFIGS/etc-lane.conf ]; then
	cp $GO_CONFIGS/etc-lane.conf /etc/lane.conf
	chown root:root /etc/lane.conf
	chmod 644 /etc/lane.conf
	fi

# lsyncd
if [ -f $GO_CONFIGS/lsyncd/$HOST_NAME/lsyncd.conf.lua ]; then
	cp $GO_CONFIGS/lsyncd/$HOST_NAME/lsyncd.conf.lua /etc/lsyncd
	chown root:root /etc/lsyncd/lsyncd.conf.lua
	chmod 600 /etc/lsyncd/lsyncd.conf.lua
	systemctl restart lsyncd
	fi

# resolvconf
if [ -f $GO_CONFIGS/resolvconf/head ]; then
	mkdir -p /etc/resolvconf/resolv.conf.f
	cp $GO_CONFIGS/resolvconf/head /etc/resolvconf/resolv.conf.d/
	chown root:root /etc/resolvconf/resolv.conf.d/head
	chmod 644 /etc/resolvconf/resolv.conf.d/head
	fi

# Update $HOME_ME/.ssh/authorized_keys
if [ -f $GO_CONFIGS/ssh/home-.ssh-authorized_keys ]; then
	mkdir -p $HOME_ME/.ssh
	mkdir -p /root/.ssh
	cp $GO_CONFIGS/ssh/home-.ssh-authorized_keys $HOME_ME/.ssh/authorized_keys
	chown -R $USER_ME:$USER_ME $HOME_ME/.ssh/*
	chmod 600 $HOME_ME/.ssh/authorized_keys
	cp $HOME_ME/.ssh/* /root/.ssh/
	chown -R root:root /root/.ssh/*
	fi

# SSHD config file
if [ -f $GO_CONFIGS/ssh/etc-ssh-sshd_config ]; then
	cp $GO_CONFIGS/ssh/etc-ssh-sshd_config /etc/ssh/sshd_config
	chmod 644 /etc/ssh/sshd_config
	chown root:root /etc/ssh/sshd_config
	systemctl restart ssh
	fi

# MakeMKV config file
if [ -f $GO_CONFIGS/makemkv/settings.conf ]; then
	mkdir -p $HOME_DIR/.MakeMKV
	mkdir -p /root/.MakeMKV
	cp $GO_CONFIGS/makemkv/settings.conf $HOME_DIR/.MakeMKV/
	chmod 600 $HOME_DIR/.MakeMKV/settings.conf
	chown -R $USER_ME:$USER_ME $HOME_DIR/.MakeMKV
	cp $HOME_DIR/.MakeMKV/settings.conf /root/.MakeMKV/
	chown -R root:root /root/.MakeMKV
	fi

# HandBrake config file
if [ -f $GO_CONFIGS/etc-lane.conf ]; then
	mkdir -p $HOME_DIR/.HandBrake
	mkdir -p /root/.HandBrake
	cp $GO_CONFIGS/handbrake/* $HOME_DIR/.HandBrake/
	chmod 600 $HOME_DIR/.HandBrake/*
	chown -R $USER_ME:$USER_ME $HOME_DIR/.HandBrake $HOME_DIR/Videos
	cp $HOME_DIR/.HandBrake/* /root/.HandBrake/
	chown -R root:root /root/.HandBrake
	fi

# Vim and vi config file
if [ -f $GO_CONFIGS/vim/.vimrc ]; then
	cp $GO_CONFIGS/vim/.vimrc $HOME_DIR/
	chmod 600 $HOME_DIR/.vimrc
	chown $USER_ME:$USER_ME $HOME_DIR/.vimrc
	cp $HOME_DIR/.vimrc /root/
	chown root:root /root/.vimrc
	fi

# Include script footer file
f_debug_variable "script.script-footer.pathname" "${LANE_CONFIG[script.script-footer.pathname]}"
source ${LANE_CONFIG[script.script-footer.pathname]}
