#!/bin/bash

# Include script setup file
	source script-setup
	if [ ! $FUNCTIONS_ARE_DEFINED ]; then echo $0: Functions not defined. Aborting; logger $0: Functions not defined. Aborting; exit 1; fi
	if [ ! $VARIABLES_ARE_DEFINED ]; then echo $0: Variables not defined. Aborting; logger $0: Variables not defined. Aborting; exit 1; fi

# Require root
	f_require_root

# Clear /etc/NetworkManager/system-connections
	echo "Clearing /etc/NetworkManager/system-connections"
	rm -f /etc/NetworkManager/system-connections/*
#	mkdir -p /etc/NetworkManager/system-connections
#	rm -f /etc/NetworkManager/system-connections/*
#	cp "$GIT_GO_CONFIGS/NetworkManager-system-connections/$HOSTNAME"/* /etc/NetworkManager/system-connections/
#	chmod -f 400 /etc/NetworkManager/system-connections/*

# Update from github.com
	echo "Updating local git repository."
	f_git

# Update ~/.ssh/authorized_keys
	echo "Updating $ADMIN_HOME_DIR/.ssh/authorized_keys from $GIT_GO_CONFIGS/ssh/home-.ssh-authorized_keys"
	cp "$GIT_GO_CONFIGS/ssh/home-.ssh-authorized_keys" "$ADMIN_HOME_DIR/.ssh/authorized_keys"
	chmod -f 600 "$ADMIN_HOME_DIR/.ssh/authorized_keys"
	chown -f $ADMIN_USER:$ADMIN_USER "$ADMIN_HOME_DIR/.ssh/authorized_keys"

# Update /etc/fstab
	echo "Updating /etc/fstab from /etc/fstab.original.install and $GIT_GO_CONFIGS/fstab/$HOSTNAME/fstab-peripherals"
	cp -n /etc/fstab /etc/fstab.original.install
	if $(f_is_file "$GIT_GO_CONFIGS/fstab/$HOSTNAME/fstab-peripherals"); then
		cat /etc/fstab.original.install "$GIT_GO_CONFIGS/fstab/$HOSTNAME/fstab-peripherals" > /etc/fstab
		chmod 664 /etc/fstab
		fi

# Update /etc/hosts
	echo "Updating /etc/hosts from $GIT_GO_CONFIGS/hosts"
	cp "$GIT_GO_CONFIGS/hosts" "/etc/hosts"
	chmod -f 644 /etc/hosts

# Update any netplan configuration files
	echo "Updating /etc/netplan from $GIT_GO_CONFIGS/netplan/$HOSTNAME-dynamic.yaml"
	rm -f /etc/netplan/system-connections/*
	cp "$GIT_GO_CONFIGS/netplan/$HOSTNAME-dynamic.yaml" /etc/netplan/
	chmod -f 400 "$GIT_GO_CONFIGS/netplan/$HOSTNAME-dynamic.yaml"
#	rm -f /etc/netplan/*

# Update Dynamic DNS
#	if $(f_is_file "/usr/sbin/ddclient"); then ddclient -daemon 0; fi

# Other updates
	echo "Updating local apt packages"
	f_upd

# This heads off a network manager problem defined at https://askubuntu.com/questions/71159/network-manager-says-device-not-managed
	touch /etc/NetworkManager/conf.d/10-globally-managed-devices.conf

# Include script footer file
	f_debug_variable "script_footer" "${PATHNAME[script_footer]}"
	source "${PATHNAME[script_footer]}"


